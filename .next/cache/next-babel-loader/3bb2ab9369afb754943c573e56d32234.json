{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"/Users/kashi-lab/github/tangochou/pages/add-text.tsx\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport Layout from '../components/Layout';\nimport InputText from '../components/InputText';\nimport Button from '../components/Button';\nimport { escape } from '../utils/strUtils';\n\nvar handleWordClick = function handleWordClick(event) {\n  return console.log(event.target.innerHTML);\n};\n\nvar getText = function getText(event) {\n  event.preventDefault();\n  var title = document.getElementsByTagName('input')[0].value;\n  var desc = document.getElementsByTagName('input')[1].value;\n  var text = document.getElementsByTagName('textarea')[0].value; // escape chars\n\n  text = escape(text); // add to database\n\n  fetch('http://localhost:3001/texts', {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: _JSON$stringify({\n      title: title,\n      desc: desc,\n      text: text,\n      wordlist: []\n    })\n  }).then(function () {\n    document.getElementById('db-res').innerText = \"added \".concat(title, \" to DB\");\n  });\n  var res = {\n    title: title,\n    desc: desc,\n    text: text\n  };\n  var textArray = text.split(' ');\n}; // const vdoms = ['the', 'quick', 'brown', 'fox'].map((w, i) => (\n//   <span key={i} onClick={handleWordClick}>\n//     {w}\n//   </span>\n// ));\n\n\nvar AddText = function AddText() {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"jsx-2396091119\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, __jsx(\"dl\", {\n    className: \"jsx-2396091119\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, __jsx(\"dt\", {\n    className: \"jsx-2396091119\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"title\"), __jsx(\"dd\", {\n    className: \"jsx-2396091119\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, __jsx(InputText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })), __jsx(\"dt\", {\n    className: \"jsx-2396091119\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"description\"), __jsx(\"dd\", {\n    className: \"jsx-2396091119\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, __jsx(InputText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }))), __jsx(\"textarea\", {\n    className: \"jsx-2396091119\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), __jsx(Button, {\n    clickhandler: getText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"add text\"), __jsx(\"span\", {\n    id: \"db-res\",\n    className: \"jsx-2396091119\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  })), __jsx(_JSXStyle, {\n    id: \"2396091119\",\n    __self: this\n  }, \"dl.jsx-2396091119{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;margin:0 0 1rem;}dt.jsx-2396091119{width:25%;}dd.jsx-2396091119{width:75%;margin-left:0;}textarea.jsx-2396091119{height:10rem;width:100%;}.db-res.jsx-2396091119{margin-left:3rem;font-size:0.5rem;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9rYXNoaS1sYWIvZ2l0aHViL3RhbmdvY2hvdS9wYWdlcy9hZGQtdGV4dC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBb0VnQixBQUdzQixBQVdILEFBR0EsQUFJRyxBQUlJLFVBVm5CLEFBR2dCLEdBSUgsSUFJTSxPQVBuQixBQUlBLFVBSUEsd0NBdkJpQix5REFDQyxnQkFDbEIiLCJmaWxlIjoiL1VzZXJzL2thc2hpLWxhYi9naXRodWIvdGFuZ29jaG91L3BhZ2VzL2FkZC10ZXh0LnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBMYXlvdXQgZnJvbSAnLi4vY29tcG9uZW50cy9MYXlvdXQnO1xuaW1wb3J0IElucHV0VGV4dCBmcm9tICcuLi9jb21wb25lbnRzL0lucHV0VGV4dCc7XG5pbXBvcnQgQnV0dG9uIGZyb20gJy4uL2NvbXBvbmVudHMvQnV0dG9uJztcbmltcG9ydCB7IGVzY2FwZSB9IGZyb20gJy4uL3V0aWxzL3N0clV0aWxzJztcblxuY29uc3QgaGFuZGxlV29yZENsaWNrID0gKGV2ZW50OiBSZWFjdC5Nb3VzZUV2ZW50KSA9PlxuICBjb25zb2xlLmxvZygoZXZlbnQudGFyZ2V0IGFzIEhUTUxTcGFuRWxlbWVudCkuaW5uZXJIVE1MKTtcblxuY29uc3QgZ2V0VGV4dCA9IChldmVudDogUmVhY3QuTW91c2VFdmVudCkgPT4ge1xuICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICBjb25zdCB0aXRsZSA9IChkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnaW5wdXQnKVswXSBhcyBIVE1MSW5wdXRFbGVtZW50KVxuICAgIC52YWx1ZTtcbiAgY29uc3QgZGVzYyA9IChkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnaW5wdXQnKVsxXSBhcyBIVE1MSW5wdXRFbGVtZW50KVxuICAgIC52YWx1ZTtcbiAgbGV0IHRleHQgPSAoZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXG4gICAgJ3RleHRhcmVhJyxcbiAgKVswXSBhcyBIVE1MVGV4dEFyZWFFbGVtZW50KS52YWx1ZTtcblxuICAvLyBlc2NhcGUgY2hhcnNcbiAgdGV4dCA9IGVzY2FwZSh0ZXh0KTtcblxuICAvLyBhZGQgdG8gZGF0YWJhc2VcbiAgZmV0Y2goJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMS90ZXh0cycsIHtcbiAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICBoZWFkZXJzOiB7IEFjY2VwdDogJ2FwcGxpY2F0aW9uL2pzb24nLCAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nIH0sXG4gICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgdGl0bGU6IHRpdGxlLFxuICAgICAgZGVzYzogZGVzYyxcbiAgICAgIHRleHQ6IHRleHQsXG4gICAgICB3b3JkbGlzdDogW10sXG4gICAgfSksXG4gIH0pLnRoZW4oKCkgPT4ge1xuICAgIChkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcbiAgICAgICdkYi1yZXMnLFxuICAgICkgYXMgSFRNTFNwYW5FbGVtZW50KS5pbm5lclRleHQgPSBgYWRkZWQgJHt0aXRsZX0gdG8gREJgO1xuICB9KTtcblxuICBjb25zdCByZXMgPSB7IHRpdGxlOiB0aXRsZSwgZGVzYzogZGVzYywgdGV4dDogdGV4dCB9O1xuICBjb25zdCB0ZXh0QXJyYXkgPSB0ZXh0LnNwbGl0KCcgJyk7XG59O1xuXG4vLyBjb25zdCB2ZG9tcyA9IFsndGhlJywgJ3F1aWNrJywgJ2Jyb3duJywgJ2ZveCddLm1hcCgodywgaSkgPT4gKFxuLy8gICA8c3BhbiBrZXk9e2l9IG9uQ2xpY2s9e2hhbmRsZVdvcmRDbGlja30+XG4vLyAgICAge3d9XG4vLyAgIDwvc3Bhbj5cbi8vICkpO1xuY29uc3QgQWRkVGV4dCA9ICgpID0+IChcbiAgPExheW91dD5cbiAgICB7LyogPHNwYW4gb25DbGljaz17ZXZlbnQgPT4gY29uc29sZS5sb2coZXZlbnQuY3VycmVudFRhcmdldC50ZXh0Q29udGVudCl9PlxuICAgICAgY2xpY2sgbWVcbiAgICA8L3NwYW4+ICovfVxuICAgIHsvKiB7dmRvbXN9ICovfVxuICAgIDxkaXY+XG4gICAgICA8ZGw+XG4gICAgICAgIDxkdD50aXRsZTwvZHQ+XG4gICAgICAgIDxkZD5cbiAgICAgICAgICA8SW5wdXRUZXh0IC8+XG4gICAgICAgIDwvZGQ+XG4gICAgICAgIDxkdD5kZXNjcmlwdGlvbjwvZHQ+XG4gICAgICAgIDxkZD5cbiAgICAgICAgICA8SW5wdXRUZXh0IC8+XG4gICAgICAgIDwvZGQ+XG4gICAgICA8L2RsPlxuICAgICAgPHRleHRhcmVhIC8+XG4gICAgICA8QnV0dG9uIGNsaWNraGFuZGxlcj17Z2V0VGV4dH0+YWRkIHRleHQ8L0J1dHRvbj5cbiAgICAgIDxzcGFuIGlkPVwiZGItcmVzXCI+PC9zcGFuPlxuICAgIDwvZGl2PlxuICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgIGRsIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgZmxleC13cmFwOiB3cmFwO1xuICAgICAgICBtYXJnaW46IDAgMCAxcmVtO1xuICAgICAgfVxuICAgICAgLypcbiAgICAgIGR0LFxuICAgICAgZGQge1xuICAgICAgICBkaXNwbGF5OiBpbmxpbmU7XG4gICAgICB9XG4gICAgICAqL1xuICAgICAgZHQge1xuICAgICAgICB3aWR0aDogMjUlO1xuICAgICAgfVxuICAgICAgZGQge1xuICAgICAgICB3aWR0aDogNzUlO1xuICAgICAgICBtYXJnaW4tbGVmdDogMDtcbiAgICAgIH1cbiAgICAgIHRleHRhcmVhIHtcbiAgICAgICAgaGVpZ2h0OiAxMHJlbTtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICB9XG4gICAgICAuZGItcmVzIHtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDNyZW07XG4gICAgICAgIGZvbnQtc2l6ZTogMC41cmVtO1xuICAgICAgfVxuICAgIGB9PC9zdHlsZT5cbiAgPC9MYXlvdXQ+XG4pO1xuXG5leHBvcnQgZGVmYXVsdCBBZGRUZXh0O1xuIl19 */\\n/*@ sourceURL=/Users/kashi-lab/github/tangochou/pages/add-text.tsx */\"));\n};\n\nexport default AddText;","map":{"version":3,"sources":["/Users/kashi-lab/github/tangochou/pages/add-text.tsx"],"names":["React","Layout","InputText","Button","escape","handleWordClick","event","console","log","target","innerHTML","getText","preventDefault","title","document","getElementsByTagName","value","desc","text","fetch","method","headers","Accept","body","wordlist","then","getElementById","innerText","res","textArray","split","AddText"],"mappings":";;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,MAAT,QAAuB,mBAAvB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SACtBC,OAAO,CAACC,GAAR,CAAaF,KAAK,CAACG,MAAP,CAAkCC,SAA9C,CADsB;AAAA,CAAxB;;AAGA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACL,KAAD,EAA6B;AAC3CA,EAAAA,KAAK,CAACM,cAAN;AACA,MAAMC,KAAK,GAAIC,QAAQ,CAACC,oBAAT,CAA8B,OAA9B,EAAuC,CAAvC,CAAD,CACXC,KADH;AAEA,MAAMC,IAAI,GAAIH,QAAQ,CAACC,oBAAT,CAA8B,OAA9B,EAAuC,CAAvC,CAAD,CACVC,KADH;AAEA,MAAIE,IAAI,GAAIJ,QAAQ,CAACC,oBAAT,CACV,UADU,EAEV,CAFU,CAAD,CAEkBC,KAF7B,CAN2C,CAU3C;;AACAE,EAAAA,IAAI,GAAGd,MAAM,CAACc,IAAD,CAAb,CAX2C,CAa3C;;AACAC,EAAAA,KAAK,CAAC,6BAAD,EAAgC;AACnCC,IAAAA,MAAM,EAAE,MAD2B;AAEnCC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,MAAM,EAAE,kBAAV;AAA8B,sBAAgB;AAA9C,KAF0B;AAGnCC,IAAAA,IAAI,EAAE,gBAAe;AACnBV,MAAAA,KAAK,EAAEA,KADY;AAEnBI,MAAAA,IAAI,EAAEA,IAFa;AAGnBC,MAAAA,IAAI,EAAEA,IAHa;AAInBM,MAAAA,QAAQ,EAAE;AAJS,KAAf;AAH6B,GAAhC,CAAL,CASGC,IATH,CASQ,YAAM;AACXX,IAAAA,QAAQ,CAACY,cAAT,CACC,QADD,CAAD,CAEsBC,SAFtB,mBAE2Cd,KAF3C;AAGD,GAbD;AAeA,MAAMe,GAAG,GAAG;AAAEf,IAAAA,KAAK,EAAEA,KAAT;AAAgBI,IAAAA,IAAI,EAAEA,IAAtB;AAA4BC,IAAAA,IAAI,EAAEA;AAAlC,GAAZ;AACA,MAAMW,SAAS,GAAGX,IAAI,CAACY,KAAL,CAAW,GAAX,CAAlB;AACD,CA/BD,C,CAiCA;AACA;AACA;AACA;AACA;;;AACA,IAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA,SACd,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANF,CADF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,EAYE,MAAC,MAAD;AAAQ,IAAA,YAAY,EAAEpB,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZF,EAaE;AAAM,IAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CALF;AAAA;AAAA;AAAA,0gIADc;AAAA,CAAhB;;AAoDA,eAAeoB,OAAf","sourcesContent":["import * as React from 'react';\nimport Layout from '../components/Layout';\nimport InputText from '../components/InputText';\nimport Button from '../components/Button';\nimport { escape } from '../utils/strUtils';\n\nconst handleWordClick = (event: React.MouseEvent) =>\n  console.log((event.target as HTMLSpanElement).innerHTML);\n\nconst getText = (event: React.MouseEvent) => {\n  event.preventDefault();\n  const title = (document.getElementsByTagName('input')[0] as HTMLInputElement)\n    .value;\n  const desc = (document.getElementsByTagName('input')[1] as HTMLInputElement)\n    .value;\n  let text = (document.getElementsByTagName(\n    'textarea',\n  )[0] as HTMLTextAreaElement).value;\n\n  // escape chars\n  text = escape(text);\n\n  // add to database\n  fetch('http://localhost:3001/texts', {\n    method: 'POST',\n    headers: { Accept: 'application/json', 'Content-Type': 'application/json' },\n    body: JSON.stringify({\n      title: title,\n      desc: desc,\n      text: text,\n      wordlist: [],\n    }),\n  }).then(() => {\n    (document.getElementById(\n      'db-res',\n    ) as HTMLSpanElement).innerText = `added ${title} to DB`;\n  });\n\n  const res = { title: title, desc: desc, text: text };\n  const textArray = text.split(' ');\n};\n\n// const vdoms = ['the', 'quick', 'brown', 'fox'].map((w, i) => (\n//   <span key={i} onClick={handleWordClick}>\n//     {w}\n//   </span>\n// ));\nconst AddText = () => (\n  <Layout>\n    {/* <span onClick={event => console.log(event.currentTarget.textContent)}>\n      click me\n    </span> */}\n    {/* {vdoms} */}\n    <div>\n      <dl>\n        <dt>title</dt>\n        <dd>\n          <InputText />\n        </dd>\n        <dt>description</dt>\n        <dd>\n          <InputText />\n        </dd>\n      </dl>\n      <textarea />\n      <Button clickhandler={getText}>add text</Button>\n      <span id=\"db-res\"></span>\n    </div>\n    <style jsx>{`\n      dl {\n        display: flex;\n        flex-wrap: wrap;\n        margin: 0 0 1rem;\n      }\n      /*\n      dt,\n      dd {\n        display: inline;\n      }\n      */\n      dt {\n        width: 25%;\n      }\n      dd {\n        width: 75%;\n        margin-left: 0;\n      }\n      textarea {\n        height: 10rem;\n        width: 100%;\n      }\n      .db-res {\n        margin-left: 3rem;\n        font-size: 0.5rem;\n      }\n    `}</style>\n  </Layout>\n);\n\nexport default AddText;\n"]},"metadata":{},"sourceType":"module"}