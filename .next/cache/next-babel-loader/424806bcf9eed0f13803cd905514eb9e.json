{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/kashi-lab/github/tangochou/pages/text/[id].tsx\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport Layout from '../../components/Layout';\nimport fetch from 'isomorphic-unfetch';\nimport Button from '../../components/Button';\nimport { addWord, deleteWord } from '../../utils/dbUtils';\nimport { unescape, strip } from '../../utils/strUtils';\n\nconst Loader = require('react-loaders').Loader;\n\nconst initialState = {\n  wordInText: '',\n  wordInVocab: '',\n  defs: []\n}; // interface State {\n//   sWordList: string[];\n// }\n// const initialState = {\n//   sWordList: [],\n// };\n\nconst linkStyle = {\n  color: 'white',\n  fontSize: '0.5rem',\n  fontWeight: 'bold',\n  textDecoration: 'none'\n}; // span clicked -> show definition\n\nclass Text extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", initialState);\n\n    _defineProperty(this, \"cleanString\", str => {\n      // remove commas and periods\n      str = strip(str); // split string if concatenated\n\n      if (str.includes('’')) {\n        str = str.split('’')[1];\n      } else if (this.state.wordInVocab.includes(\"'\")) {\n        str = str.split(\"'\")[1];\n      } // lowercase\n\n\n      return str.toLowerCase();\n    });\n\n    _defineProperty(this, \"handleWordClick\", async event => {\n      // show loading\n      const loader = __jsx(\"img\", {\n        src: \"/static/loader.gif\",\n        style: {\n          width: '3rem'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      });\n\n      const container = document.getElementsByClassName('def')[0];\n      ReactDOM.render(loader, container); // clean string\n\n      this.state.wordInText = event.target.innerHTML;\n      this.state.wordInVocab = this.cleanString(this.state.wordInText); // // remove commas and periods\n      // this.state.wordInVocab = strip(this.state.wordInText);\n      // // split string if concatenated\n      // if (this.state.wordInVocab.includes('’')) {\n      //   this.state.wordInVocab = this.state.wordInVocab.split('’')[1];\n      // } else if (this.state.wordInVocab.includes(\"'\")) {\n      //   this.state.wordInVocab = this.state.wordInVocab.split(\"'\")[1];\n      // }\n      // show link to Linguee\n\n      const url = `https://www.linguee.fr/francais-anglais/search?source=auto&query=${this.state.wordInVocab}`;\n\n      const link = __jsx(\"a\", {\n        href: url,\n        style: linkStyle,\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, url);\n\n      document.getElementsByClassName('word')[0].innerText = this.state.wordInVocab;\n      ReactDOM.render(link, document.getElementsByClassName('def-link')[0]); // get definitions from Linguee\n\n      let response = await fetch(`http://localhost:3000/api/linguee/${this.state.wordInVocab}`);\n      let data = await response.json();\n\n      if (!data.length) {\n        // linguee timed out\n        // get definitions from collitions\n        response = await fetch(`http://localhost:3000/api/collins/${this.state.wordInVocab}`);\n        data = response.json();\n      } // display definitions\n\n\n      const spanStyle = {\n        marginRight: '1rem'\n      };\n      let elements;\n\n      if (data.length) {\n        // copy to state\n        this.state.defs = data;\n        elements = data.map((item, index) => __jsx(\"span\", {\n          key: index,\n          style: spanStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, item));\n      } else {\n        elements = __jsx(\"i\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, \"no definition found :(\");\n      }\n\n      console.log(this.state.defs);\n      ReactDOM.render(elements, container);\n    });\n\n    _defineProperty(this, \"textWithTags\", (text, wordlist) => __jsx(React.Fragment, null, text.split(' ').map((word, index) => __jsx(React.Fragment, null, __jsx(\"span\", {\n      key: index,\n      onClick: this.handleWordClick,\n      className: \"jsx-3182803227\" + \" \" + ((wordlist.includes(word) ? 'highlight' : '') || \"\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, unescape(word)), \"\\xA0\")), __jsx(_JSXStyle, {\n      id: \"3182803227\",\n      __self: this\n    }, \".highlight.jsx-3182803227{background-color:#a17da1;color:white;padding:0 0.3rem;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/kashi-lab/github/tangochou/pages/text/[id].tsx */\")));\n  }\n\n  static async getInitialProps(context) {\n    const {\n      id\n    } = context.query;\n    const res = await fetch(`http://localhost:3001/texts?id=${id}`);\n    let data = await res.json();\n    data = data[0];\n    return {\n      id: data.id,\n      desc: data.desc,\n      text: data.text,\n      title: data.title,\n      wordlist: data.wordlist\n    };\n  }\n\n  render() {\n    return __jsx(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"jsx-2875986623\" + \" \" + \"word-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"jsx-2875986623\" + \" \" + \"word\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, __jsx(\"i\", {\n      className: \"jsx-2875986623\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"click on a word :)\")), __jsx(\"div\", {\n      className: \"jsx-2875986623\" + \" \" + \"def\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      className: \"jsx-2875986623\" + \" \" + \"button-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, __jsx(Button, {\n      clickhandler: e => {\n        addWord(this.state.wordInText, this.state.wordInVocab, this.props.id, this.state.defs).then(() => location.reload());\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"add to vocab\"), __jsx(Button, {\n      clickhandler: e => {\n        deleteWord(document.getElementsByClassName('word')[0].innerText, this.props.id).then(() => location.reload());\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"remove from vocab\")), __jsx(\"div\", {\n      className: \"jsx-2875986623\" + \" \" + \"def-link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    })), __jsx(\"hr\", {\n      className: \"jsx-2875986623\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }), __jsx(\"h3\", {\n      className: \"jsx-2875986623\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, this.props.title), __jsx(\"div\", {\n      className: \"jsx-2875986623\" + \" \" + \"text-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, this.textWithTags(this.props.text, this.props.wordlist)), __jsx(_JSXStyle, {\n      id: \"2875986623\",\n      __self: this\n    }, \".button-container.jsx-2875986623{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:space-around;-webkit-justify-content:space-around;-ms-flex-pack:space-around;justify-content:space-around;margin:0.5rem 0;width:100%;}.def.jsx-2875986623{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-flow:row wrap;-ms-flex-flow:row wrap;flex-flow:row wrap;margin:0.5rem 0;}.def-link.jsx-2875986623{line-height:1;}.text-container.jsx-2875986623{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-flow:row wrap;-ms-flex-flow:row wrap;flex-flow:row wrap;overflow-wrap:break-word;}.word.jsx-2875986623{border-bottom:1px dotted #fff;}.word-container.jsx-2875986623{background-color:#a17da1;color:white;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-flow:column;-ms-flex-flow:column;flex-flow:column;padding:1rem;}.word.jsx-2875986623{-webkit-flex-basis:30%;-ms-flex-preferred-size:30%;flex-basis:30%;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/kashi-lab/github/tangochou/pages/text/[id].tsx */\"));\n  }\n\n}\n\nexport default Text;","map":{"version":3,"sources":["/Users/kashi-lab/github/tangochou/pages/text/[id].tsx"],"names":["React","ReactDOM","Layout","fetch","Button","addWord","deleteWord","unescape","strip","Loader","require","initialState","wordInText","wordInVocab","defs","linkStyle","color","fontSize","fontWeight","textDecoration","Text","Component","str","includes","split","state","toLowerCase","event","loader","width","container","document","getElementsByClassName","render","target","innerHTML","cleanString","url","link","innerText","response","data","json","length","spanStyle","marginRight","elements","map","item","index","console","log","text","wordlist","word","handleWordClick","getInitialProps","context","id","query","res","desc","title","e","props","then","location","reload","textWithTags"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport Layout from '../../components/Layout';\nimport fetch from 'isomorphic-unfetch';\nimport InputText from '../../components/InputText';\nimport Button from '../../components/Button';\nimport { addWord, deleteWord } from '../../utils/dbUtils';\nimport { unescape, strip } from '../../utils/strUtils';\n\nimport scss from '../../node_modules/loaders.css/src/animations/pacman.scss';\nconst Loader = require('react-loaders').Loader;\n\ninterface Props {\n  id: number;\n  desc: string;\n  text: string;\n  title: string;\n  wordlist: string[];\n}\n\ninterface State {\n  wordInText: string;\n  wordInVocab: string;\n  defs: string[];\n}\n\nconst initialState = {\n  wordInText: '',\n  wordInVocab: '',\n  defs: [],\n};\n// interface State {\n//   sWordList: string[];\n// }\n// const initialState = {\n//   sWordList: [],\n// };\n\nconst linkStyle: React.CSSProperties = {\n  color: 'white',\n  fontSize: '0.5rem',\n  fontWeight: 'bold',\n  textDecoration: 'none',\n};\n\n// span clicked -> show definition\n\nclass Text extends React.Component<Props, State> {\n  state: State = initialState;\n\n  static async getInitialProps(context) {\n    const { id } = context.query;\n    const res = await fetch(`http://localhost:3001/texts?id=${id}`);\n    let data = await res.json();\n    data = data[0];\n\n    return {\n      id: data.id,\n      desc: data.desc,\n      text: data.text,\n      title: data.title,\n      wordlist: data.wordlist,\n    };\n  }\n\n  cleanString = (str: string) => {\n    // remove commas and periods\n    str = strip(str);\n    // split string if concatenated\n    if (str.includes('’')) {\n      str = str.split('’')[1];\n    } else if (this.state.wordInVocab.includes(\"'\")) {\n      str = str.split(\"'\")[1];\n    }\n    // lowercase\n    return str.toLowerCase();\n  };\n  handleWordClick = async (event: React.MouseEvent) => {\n    // show loading\n    const loader = <img src=\"/static/loader.gif\" style={{ width: '3rem' }} />;\n    const container = document.getElementsByClassName('def')[0];\n    ReactDOM.render(loader, container);\n\n    // clean string\n    this.state.wordInText = (event.target as HTMLSpanElement).innerHTML;\n    this.state.wordInVocab = this.cleanString(this.state.wordInText);\n    // // remove commas and periods\n    // this.state.wordInVocab = strip(this.state.wordInText);\n    // // split string if concatenated\n    // if (this.state.wordInVocab.includes('’')) {\n    //   this.state.wordInVocab = this.state.wordInVocab.split('’')[1];\n    // } else if (this.state.wordInVocab.includes(\"'\")) {\n    //   this.state.wordInVocab = this.state.wordInVocab.split(\"'\")[1];\n    // }\n\n    // show link to Linguee\n    const url = `https://www.linguee.fr/francais-anglais/search?source=auto&query=${this.state.wordInVocab}`;\n    const link = (\n      <a href={url} style={linkStyle} target=\"_blank\">\n        {url}\n      </a>\n    );\n    (document.getElementsByClassName(\n      'word',\n    )[0] as HTMLDivElement).innerText = this.state.wordInVocab;\n    ReactDOM.render(link, document.getElementsByClassName('def-link')[0]);\n\n    // get definitions from Linguee\n    let response = await fetch(\n      `http://localhost:3000/api/linguee/${this.state.wordInVocab}`,\n    );\n    let data = await response.json();\n    if (!data.length) {\n      // linguee timed out\n      // get definitions from collitions\n      response = await fetch(\n        `http://localhost:3000/api/collins/${this.state.wordInVocab}`,\n      );\n      data = response.json();\n    }\n    // display definitions\n    const spanStyle: React.CSSProperties = { marginRight: '1rem' };\n\n    let elements;\n    if (data.length) {\n      // copy to state\n      this.state.defs = data;\n      elements = data.map((item, index) => (\n        <span key={index} style={spanStyle}>\n          {item}\n        </span>\n      ));\n    } else {\n      elements = <i>no definition found :(</i>;\n    }\n    console.log(this.state.defs);\n\n    ReactDOM.render(elements, container);\n  };\n\n  textWithTags = (text: string, wordlist: string[]) => (\n    <>\n      {text.split(' ').map((word, index) => (\n        <>\n          <span\n            key={index}\n            className={wordlist.includes(word) ? 'highlight' : ''}\n            onClick={this.handleWordClick}\n          >\n            {unescape(word)}\n          </span>\n          &nbsp;\n        </>\n      ))}\n      <style jsx>{`\n        .highlight {\n          background-color: #a17da1;\n          color: white;\n          padding: 0 0.3rem;\n        }\n      `}</style>\n    </>\n  );\n\n  render() {\n    return (\n      <Layout>\n        <div className=\"word-container\">\n          <div className=\"word\">\n            <i>click on a word :)</i>\n          </div>\n          <div className=\"def\"></div>\n          {/* <InputText /> */}\n          <div className=\"button-container\">\n            <Button\n              clickhandler={e => {\n                addWord(\n                  this.state.wordInText,\n                  this.state.wordInVocab,\n                  this.props.id,\n                  this.state.defs,\n                ).then(() => location.reload());\n              }}\n            >\n              add to vocab\n            </Button>\n            <Button\n              clickhandler={e => {\n                deleteWord(\n                  (document.getElementsByClassName('word')[0] as HTMLDivElement)\n                    .innerText,\n                  this.props.id,\n                ).then(() => location.reload());\n              }}\n            >\n              remove from vocab\n            </Button>\n          </div>\n          <div className=\"def-link\"></div>\n        </div>\n        <hr></hr>\n        <h3>{this.props.title}</h3>\n        <div className=\"text-container\">\n          {this.textWithTags(this.props.text, this.props.wordlist)}\n        </div>\n        <style jsx>{`\n          .button-container {\n            display: flex;\n            justify-content: space-around;\n            margin: 0.5rem 0;\n            width: 100%;\n          }\n          .def {\n            display: flex;\n            flex-flow: row wrap;\n            margin: 0.5rem 0;\n          }\n          .def-link {\n            line-height: 1;\n          }\n          .text-container {\n            display: flex;\n            flex-flow: row wrap;\n            overflow-wrap: break-word;\n          }\n          .word {\n            border-bottom: 1px dotted #fff;\n          }\n          .word-container {\n            background-color: #a17da1;\n            color: white;\n            display: flex;\n            flex-flow: column;\n            padding: 1rem;\n          }\n          .word {\n            flex-basis: 30%;\n          }\n        `}</style>\n      </Layout>\n    );\n  }\n}\n\nexport default Text;\n"]},"metadata":{},"sourceType":"module"}