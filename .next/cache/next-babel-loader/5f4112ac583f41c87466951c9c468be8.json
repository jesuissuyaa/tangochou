{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"/Users/kashi-lab/github/tangochou/utils/dbUtils.tsx\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport { escape } from './strUtils';\nexport const getWords = () => {\n  fetch('http://localhost:3001/vocab').then(res => res.json()).then(json => {\n    //console.log(json);\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, \"hello\");\n  });\n};\nexport async function addWord(tWord, vWord, textId, defs) {\n  tWord = escape(tWord);\n  vWord = escape(vWord);\n  const vRes = await fetch('http://localhost:3001/vocab');\n  const vData = await vRes.json();\n  const vocab = vData.map(item => item.word); // add to vocab\n\n  if (!vocab.includes(vWord)) {\n    fetch('http://localhost:3001/vocab', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: _JSON$stringify({\n        word: vWord.toLowerCase(),\n        definition: defs\n      })\n    }).then(getWords);\n  } // add to word list (for text)\n\n\n  let tRes = await fetch(`http://localhost:3001/texts/?id=${textId}`);\n  let tData = await tRes.json();\n  tData = tData[0];\n  const wordList = tData.wordlist;\n  wordList.push(tWord);\n  console.log(wordList);\n  tRes = await fetch(`http://localhost:3001/texts/${textId}`, {\n    method: 'PUT',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: _JSON$stringify({\n      text: tData.text,\n      desc: tData.desc,\n      title: tData.title,\n      wordlist: wordList\n    })\n  });\n}\nexport async function getTextTitles() {\n  const res = await fetch('http://localhost:3001/texts');\n  const data = await res.json();\n  const elements = [];\n  data.map(item => elements.push(__jsx(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, item.title)));\n  return __jsx(React.Fragment, null, elements);\n}\nexport async function deleteWord(word, textId) {\n  word = escape(word); // remove from vocab\n\n  const vRes = await fetch(`http://localhost:3001/vocab?word=${word.toLowerCase()}`);\n  const vData = await vRes.json();\n\n  if (vData.length) {\n    const vId = vData[0].id;\n    fetch(`http://localhost:3001/vocab/${vId}`, {\n      method: 'DELETE'\n    }).then(getWords).catch(e => {\n      console.log(e);\n    });\n  } // delete from to word list (for text)\n\n\n  let tRes = await fetch(`http://localhost:3001/texts/?id=${textId}`);\n  let tData = await tRes.json();\n  tData = tData[0];\n  const wordList = tData.wordlist;\n  const i = wordList.indexOf(word);\n  console.log(wordList);\n  if (i > -1) wordList.splice(i, 1);\n  console.log(wordList);\n  tRes = await fetch(`http://localhost:3001/texts/${textId}`, {\n    method: 'PUT',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: _JSON$stringify({\n      text: tData.text,\n      desc: tData.desc,\n      title: tData.title,\n      wordlist: wordList\n    })\n  });\n}","map":{"version":3,"sources":["/Users/kashi-lab/github/tangochou/utils/dbUtils.tsx"],"names":["React","escape","getWords","fetch","then","res","json","addWord","tWord","vWord","textId","defs","vRes","vData","vocab","map","item","word","includes","method","headers","Accept","body","toLowerCase","definition","tRes","tData","wordList","wordlist","push","console","log","text","desc","title","getTextTitles","data","elements","deleteWord","length","vId","id","catch","e","i","indexOf","splice"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { escape } from './strUtils';\n\nexport const getWords = () => {\n  fetch('http://localhost:3001/vocab')\n    .then(res => res.json())\n    .then(json => {\n      //console.log(json);\n      return <div>hello</div>;\n    });\n};\nexport async function addWord(\n  tWord: string,\n  vWord: string,\n  textId: number,\n  defs: string[],\n) {\n  tWord = escape(tWord);\n  vWord = escape(vWord);\n  const vRes = await fetch('http://localhost:3001/vocab');\n  const vData = await vRes.json();\n  const vocab = vData.map(item => item.word);\n  // add to vocab\n  if (!vocab.includes(vWord)) {\n    fetch('http://localhost:3001/vocab', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        word: vWord.toLowerCase(),\n        definition: defs,\n      }),\n    }).then(getWords);\n  }\n  // add to word list (for text)\n  let tRes = await fetch(`http://localhost:3001/texts/?id=${textId}`);\n  let tData = await tRes.json();\n  tData = tData[0];\n  const wordList = tData.wordlist;\n  wordList.push(tWord);\n  console.log(wordList);\n  tRes = await fetch(`http://localhost:3001/texts/${textId}`, {\n    method: 'PUT',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      text: tData.text,\n      desc: tData.desc,\n      title: tData.title,\n      wordlist: wordList,\n    }),\n  });\n}\n\nexport async function getTextTitles() {\n  const res = await fetch('http://localhost:3001/texts');\n  const data = await res.json();\n  const elements = [];\n  data.map(item => elements.push(<li>{item.title}</li>));\n  return <>{elements}</>;\n}\n\nexport async function deleteWord(word: string, textId: number) {\n  word = escape(word);\n  // remove from vocab\n  const vRes = await fetch(\n    `http://localhost:3001/vocab?word=${word.toLowerCase()}`,\n  );\n  const vData = await vRes.json();\n  if (vData.length) {\n    const vId = vData[0].id;\n    fetch(`http://localhost:3001/vocab/${vId}`, {\n      method: 'DELETE',\n    })\n      .then(getWords)\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  // delete from to word list (for text)\n  let tRes = await fetch(`http://localhost:3001/texts/?id=${textId}`);\n  let tData = await tRes.json();\n  tData = tData[0];\n  const wordList = tData.wordlist;\n  const i = wordList.indexOf(word);\n  console.log(wordList);\n  if (i > -1) wordList.splice(i, 1);\n  console.log(wordList);\n  tRes = await fetch(`http://localhost:3001/texts/${textId}`, {\n    method: 'PUT',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      text: tData.text,\n      desc: tData.desc,\n      title: tData.title,\n      wordlist: wordList,\n    }),\n  });\n}\n"]},"metadata":{},"sourceType":"module"}