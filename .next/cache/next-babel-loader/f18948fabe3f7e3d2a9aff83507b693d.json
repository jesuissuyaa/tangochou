{"ast":null,"code":"import request from 'request';\nimport cheerio from 'cheerio';\nimport { encodeAccents } from '../../../utils/strUtils';\nexport default (({\n  query: {\n    word\n  }\n}, res) => {\n  // request to collins dictionary\n  request({\n    uri: `https://www.collinsdictionary.com/dictionary/french-english/${encodeAccents(word)}`,\n    followAllRedirects: true\n  }, (err, response, body) => {\n    console.log(response.request.href);\n\n    if (err) {\n      console.error(err);\n      res.status(500);\n      res.end('server error');\n    }\n\n    let $ = cheerio.load(body); // link to infinitive\n\n    const seeAlso = $($('.sense')[0]).find('.ref');\n\n    if (seeAlso.length) {\n      request({\n        uri: `https://www.collinsdictionary.com/dictionary/french-english/${encodeAccents(seeAlso.text())}`\n      }, (err2, response2, body2) => {\n        if (err) {\n          console.error(err2);\n          res.status(500);\n          res.end('server error');\n        } // parse body\n\n\n        $ = cheerio.load(body2);\n        const defList = [];\n        $('.sense > .type-translation > .quote').each((index, element) => {\n          defList.push($(element).text());\n        });\n        res.status(200).json(defList);\n      });\n    } else {\n      const defList = [];\n      $('.sense .type-translation > .quote').each((index, element) => {\n        defList.push($(element).text());\n      });\n      res.status(200).json(defList);\n    }\n  }); // res.status(200).json({ message: `you requested for ${word} ` });\n});","map":{"version":3,"sources":["/Users/kashi-lab/github/tangochou/pages/api/collins/[word].tsx"],"names":["request","cheerio","encodeAccents","query","word","res","uri","followAllRedirects","err","response","body","console","log","href","error","status","end","$","load","seeAlso","find","length","text","err2","response2","body2","defList","each","index","element","push","json"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,SAASC,aAAT,QAA8B,yBAA9B;AAEA,gBAAe,CAAC;AAAEC,EAAAA,KAAK,EAAE;AAAEC,IAAAA;AAAF;AAAT,CAAD,EAAsBC,GAAtB,KAA8B;AAC3C;AACAL,EAAAA,OAAO,CACL;AACEM,IAAAA,GAAG,EAAG,+DAA8DJ,aAAa,CAC/EE,IAD+E,CAE/E,EAHJ;AAIEG,IAAAA,kBAAkB,EAAE;AAJtB,GADK,EAOL,CAACC,GAAD,EAAMC,QAAN,EAAgBC,IAAhB,KAAyB;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACT,OAAT,CAAiBa,IAA7B;;AACA,QAAIL,GAAJ,EAAS;AACPG,MAAAA,OAAO,CAACG,KAAR,CAAcN,GAAd;AACAH,MAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX;AACAV,MAAAA,GAAG,CAACW,GAAJ,CAAQ,cAAR;AACD;;AAED,QAAIC,CAAC,GAAGhB,OAAO,CAACiB,IAAR,CAAaR,IAAb,CAAR,CARuB,CASvB;;AACA,UAAMS,OAAO,GAAGF,CAAC,CAACA,CAAC,CAAC,QAAD,CAAD,CAAY,CAAZ,CAAD,CAAD,CAAkBG,IAAlB,CAAuB,MAAvB,CAAhB;;AACA,QAAID,OAAO,CAACE,MAAZ,EAAoB;AAClBrB,MAAAA,OAAO,CACL;AACEM,QAAAA,GAAG,EAAG,+DAA8DJ,aAAa,CAC/EiB,OAAO,CAACG,IAAR,EAD+E,CAE/E;AAHJ,OADK,EAML,CAACC,IAAD,EAAOC,SAAP,EAAkBC,KAAlB,KAA4B;AAC1B,YAAIjB,GAAJ,EAAS;AACPG,UAAAA,OAAO,CAACG,KAAR,CAAcS,IAAd;AACAlB,UAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX;AACAV,UAAAA,GAAG,CAACW,GAAJ,CAAQ,cAAR;AACD,SALyB,CAM1B;;;AACAC,QAAAA,CAAC,GAAGhB,OAAO,CAACiB,IAAR,CAAaO,KAAb,CAAJ;AACA,cAAMC,OAAO,GAAG,EAAhB;AACAT,QAAAA,CAAC,CAAC,qCAAD,CAAD,CAAyCU,IAAzC,CAA8C,CAACC,KAAD,EAAQC,OAAR,KAAoB;AAChEH,UAAAA,OAAO,CAACI,IAAR,CAAab,CAAC,CAACY,OAAD,CAAD,CAAWP,IAAX,EAAb;AACD,SAFD;AAGAjB,QAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBgB,IAAhB,CAAqBL,OAArB;AACD,OAnBI,CAAP;AAqBD,KAtBD,MAsBO;AACL,YAAMA,OAAO,GAAG,EAAhB;AACAT,MAAAA,CAAC,CAAC,mCAAD,CAAD,CAAuCU,IAAvC,CAA4C,CAACC,KAAD,EAAQC,OAAR,KAAoB;AAC9DH,QAAAA,OAAO,CAACI,IAAR,CAAab,CAAC,CAACY,OAAD,CAAD,CAAWP,IAAX,EAAb;AACD,OAFD;AAGAjB,MAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBgB,IAAhB,CAAqBL,OAArB;AACD;AACF,GA/CI,CAAP,CAF2C,CAmD3C;AACD,CApDD","sourcesContent":["import request from 'request';\nimport cheerio from 'cheerio';\nimport { encodeAccents } from '../../../utils/strUtils';\n\nexport default ({ query: { word } }, res) => {\n  // request to collins dictionary\n  request(\n    {\n      uri: `https://www.collinsdictionary.com/dictionary/french-english/${encodeAccents(\n        word,\n      )}`,\n      followAllRedirects: true,\n    },\n    (err, response, body) => {\n      console.log(response.request.href);\n      if (err) {\n        console.error(err);\n        res.status(500);\n        res.end('server error');\n      }\n\n      let $ = cheerio.load(body);\n      // link to infinitive\n      const seeAlso = $($('.sense')[0]).find('.ref');\n      if (seeAlso.length) {\n        request(\n          {\n            uri: `https://www.collinsdictionary.com/dictionary/french-english/${encodeAccents(\n              seeAlso.text(),\n            )}`,\n          },\n          (err2, response2, body2) => {\n            if (err) {\n              console.error(err2);\n              res.status(500);\n              res.end('server error');\n            }\n            // parse body\n            $ = cheerio.load(body2);\n            const defList = [];\n            $('.sense > .type-translation > .quote').each((index, element) => {\n              defList.push($(element).text());\n            });\n            res.status(200).json(defList);\n          },\n        );\n      } else {\n        const defList = [];\n        $('.sense .type-translation > .quote').each((index, element) => {\n          defList.push($(element).text());\n        });\n        res.status(200).json(defList);\n      }\n    },\n  );\n  // res.status(200).json({ message: `you requested for ${word} ` });\n};\n"]},"metadata":{},"sourceType":"module"}