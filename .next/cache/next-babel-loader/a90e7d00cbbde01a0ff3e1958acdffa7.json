{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/kashi-lab/github/tangochou/pages/vocab.tsx\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport Layout from '../components/Layout';\nimport { unescape } from '../utils/strUtils'; // import fetch from 'isomorphic-unfetch';\n\nconst initWordState = {\n  words: [{\n    id: 1,\n    word: 'falloir',\n    definition: ['to need', 'have to']\n  }, {\n    id: 2,\n    word: 'valoir',\n    definition: ['be worth']\n  }, {\n    id: 3,\n    word: 'faire',\n    definition: ['to do', 'to make']\n  }]\n};\n\nconst createWordList = dict => {\n  const res = [];\n  let l = 65;\n  let _w = 0;\n\n  while (l < 65 + 26\n  /*&& _w < dict.length*/\n  ) {\n    const letter = String.fromCharCode(l);\n    let w = _w; // insert heading letter\n\n    res.push(__jsx(Heading, {\n      key: l,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, letter));\n    const list = [];\n    let key = 1;\n\n    while (w < dict.length && dict[w].word[0].toUpperCase() == letter) {\n      list.push(__jsx(\"li\", {\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, unescape(dict[w].word), __jsx(\"div\", {\n        key: key++,\n        style: {\n          marginLeft: '1rem',\n          fontSize: '0.8rem'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, dict[w++].definition.join(', '))));\n    }\n\n    res.push(__jsx(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, list));\n    _w = w;\n    l++;\n  }\n\n  _w = 0;\n  return res;\n};\n\nconst Heading = props => __jsx(\"p\", {\n  className: \"jsx-1163175343\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 71\n  },\n  __self: this\n}, props.children, __jsx(_JSXStyle, {\n  id: \"1163175343\",\n  __self: this\n}, \"p.jsx-1163175343{font-size:1.5rem;font-weight:bold;margin:0;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9rYXNoaS1sYWIvZ2l0aHViL3RhbmdvY2hvdS9wYWdlcy92b2NhYi50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBd0VnQixBQUcwQixpQkFDQSxpQkFDUixTQUNYIiwiZmlsZSI6Ii9Vc2Vycy9rYXNoaS1sYWIvZ2l0aHViL3RhbmdvY2hvdS9wYWdlcy92b2NhYi50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgTGF5b3V0IGZyb20gJy4uL2NvbXBvbmVudHMvTGF5b3V0JztcbmltcG9ydCB7IHVuZXNjYXBlIH0gZnJvbSAnLi4vdXRpbHMvc3RyVXRpbHMnO1xuLy8gaW1wb3J0IGZldGNoIGZyb20gJ2lzb21vcnBoaWMtdW5mZXRjaCc7XG5pbnRlcmZhY2UgUHJvcHMge1xuICBrZXk6IG51bWJlcjtcbn1cblxuaW50ZXJmYWNlIFdvcmRTdGF0ZSB7XG4gIHdvcmRzOiB7IGlkOiBudW1iZXI7IHdvcmQ6IHN0cmluZzsgZGVmaW5pdGlvbjogc3RyaW5nW10gfVtdO1xufVxuXG5jb25zdCBpbml0V29yZFN0YXRlID0ge1xuICB3b3JkczogW1xuICAgIHtcbiAgICAgIGlkOiAxLFxuICAgICAgd29yZDogJ2ZhbGxvaXInLFxuICAgICAgZGVmaW5pdGlvbjogWyd0byBuZWVkJywgJ2hhdmUgdG8nXSxcbiAgICB9LFxuICAgIHtcbiAgICAgIGlkOiAyLFxuICAgICAgd29yZDogJ3ZhbG9pcicsXG4gICAgICBkZWZpbml0aW9uOiBbJ2JlIHdvcnRoJ10sXG4gICAgfSxcbiAgICB7XG4gICAgICBpZDogMyxcbiAgICAgIHdvcmQ6ICdmYWlyZScsXG4gICAgICBkZWZpbml0aW9uOiBbJ3RvIGRvJywgJ3RvIG1ha2UnXSxcbiAgICB9LFxuICBdLFxufTtcblxuY29uc3QgY3JlYXRlV29yZExpc3QgPSAoXG4gIGRpY3Q6IHtcbiAgICBpZDogbnVtYmVyO1xuICAgIHdvcmQ6IHN0cmluZztcbiAgICBkZWZpbml0aW9uOiBzdHJpbmdbXTtcbiAgfVtdLFxuKSA9PiB7XG4gIGNvbnN0IHJlcyA9IFtdO1xuXG4gIGxldCBsID0gNjU7XG4gIGxldCBfdyA9IDA7XG4gIHdoaWxlIChsIDwgNjUgKyAyNiAvKiYmIF93IDwgZGljdC5sZW5ndGgqLykge1xuICAgIGNvbnN0IGxldHRlciA9IFN0cmluZy5mcm9tQ2hhckNvZGUobCk7XG4gICAgbGV0IHcgPSBfdztcbiAgICAvLyBpbnNlcnQgaGVhZGluZyBsZXR0ZXJcbiAgICByZXMucHVzaCg8SGVhZGluZyBrZXk9e2x9PntsZXR0ZXJ9PC9IZWFkaW5nPik7XG5cbiAgICBjb25zdCBsaXN0ID0gW107XG4gICAgbGV0IGtleSA9IDE7XG4gICAgd2hpbGUgKHcgPCBkaWN0Lmxlbmd0aCAmJiBkaWN0W3ddLndvcmRbMF0udG9VcHBlckNhc2UoKSA9PSBsZXR0ZXIpIHtcbiAgICAgIGxpc3QucHVzaChcbiAgICAgICAgPGxpIGtleT17a2V5fT5cbiAgICAgICAgICB7dW5lc2NhcGUoZGljdFt3XS53b3JkKX1cbiAgICAgICAgICA8ZGl2IGtleT17a2V5Kyt9IHN0eWxlPXt7IG1hcmdpbkxlZnQ6ICcxcmVtJywgZm9udFNpemU6ICcwLjhyZW0nIH19PlxuICAgICAgICAgICAge2RpY3RbdysrXS5kZWZpbml0aW9uLmpvaW4oJywgJyl9XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvbGk+LFxuICAgICAgKTtcbiAgICB9XG4gICAgcmVzLnB1c2goPHVsPntsaXN0fTwvdWw+KTtcbiAgICBfdyA9IHc7XG4gICAgbCsrO1xuICB9XG4gIF93ID0gMDtcbiAgcmV0dXJuIHJlcztcbn07XG5cbmNvbnN0IEhlYWRpbmc6IFJlYWN0LkZDPFByb3BzPiA9IHByb3BzID0+IChcbiAgPHA+XG4gICAge3Byb3BzLmNoaWxkcmVufVxuICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgIHAge1xuICAgICAgICBmb250LXNpemU6IDEuNXJlbTtcbiAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICAgIH1cbiAgICBgfTwvc3R5bGU+XG4gIDwvcD5cbik7XG5cbmNsYXNzIFZvY2FiIGV4dGVuZHMgUmVhY3QuUHVyZUNvbXBvbmVudDx7fSwgV29yZFN0YXRlPiB7XG4gIHN0YXRlOiBXb3JkU3RhdGUgPSBpbml0V29yZFN0YXRlO1xuXG4gIGZldGNoV29yZHMoKSB7XG4gICAgZmV0Y2goJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMS92b2NhYi10ZW1wP19zb3J0PXdvcmQmb3JkZXI9YXNjJylcbiAgICAgIC50aGVuKHJlcyA9PiByZXMuanNvbigpKVxuICAgICAgLnRoZW4oanNvbiA9PiB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoeyB3b3JkczoganNvbiB9KTtcbiAgICAgIH0pO1xuICB9XG5cbiAgY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgdGhpcy5mZXRjaFdvcmRzKCk7IC8vIHVwZGF0ZSBzdGF0ZVxuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiAoXG4gICAgICA8TGF5b3V0PlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbnRhaW5lclwiPntjcmVhdGVXb3JkTGlzdCh0aGlzLnN0YXRlLndvcmRzKX08L2Rpdj5cbiAgICAgICAgey8qIFRPRE8gbW92ZSBjcmVhdGVXb3JkTGlzdCB0byBjb21wb25lbnRkaWRtb3V0biAqL31cbiAgICAgICAgey8qIDxkaXY+e2NyZWF0ZVdvcmRMaXN0KHRoaXMuc3RhdGUud29yZHMubWFwKGl0ZW0gPT4gaXRlbS53b3JkKSl9PC9kaXY+ICovfVxuICAgICAgICB7Lyoge1suLi5BcnJheSgyNildLm1hcCgoXywgaSkgPT4gKFxuICAgICAgICAgIDxIZWFkaW5nIGtleT17aX0+e1N0cmluZy5mcm9tQ2hhckNvZGUoNjUgKyBpKX08L0hlYWRpbmc+XG4gICAgICAgICkpfSAqL31cbiAgICAgIDwvTGF5b3V0PlxuICAgICk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgVm9jYWI7XG4iXX0= */\\n/*@ sourceURL=/Users/kashi-lab/github/tangochou/pages/vocab.tsx */\"));\n\nclass Vocab extends React.PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", initWordState);\n  }\n\n  fetchWords() {\n    fetch('http://localhost:3001/vocab-temp?_sort=word&order=asc').then(res => res.json()).then(json => {\n      this.setState({\n        words: json\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.fetchWords(); // update state\n  }\n\n  render() {\n    return __jsx(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, createWordList(this.state.words)));\n  }\n\n}\n\nexport default Vocab;","map":{"version":3,"sources":["/Users/kashi-lab/github/tangochou/pages/vocab.tsx"],"names":["React","Layout","unescape","initWordState","words","id","word","definition","createWordList","dict","res","l","_w","letter","String","fromCharCode","w","push","list","key","length","toUpperCase","marginLeft","fontSize","join","Heading","props","children","Vocab","PureComponent","fetchWords","fetch","then","json","setState","componentDidMount","render","state"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport Layout from '../components/Layout';\nimport { unescape } from '../utils/strUtils';\n// import fetch from 'isomorphic-unfetch';\ninterface Props {\n  key: number;\n}\n\ninterface WordState {\n  words: { id: number; word: string; definition: string[] }[];\n}\n\nconst initWordState = {\n  words: [\n    {\n      id: 1,\n      word: 'falloir',\n      definition: ['to need', 'have to'],\n    },\n    {\n      id: 2,\n      word: 'valoir',\n      definition: ['be worth'],\n    },\n    {\n      id: 3,\n      word: 'faire',\n      definition: ['to do', 'to make'],\n    },\n  ],\n};\n\nconst createWordList = (\n  dict: {\n    id: number;\n    word: string;\n    definition: string[];\n  }[],\n) => {\n  const res = [];\n\n  let l = 65;\n  let _w = 0;\n  while (l < 65 + 26 /*&& _w < dict.length*/) {\n    const letter = String.fromCharCode(l);\n    let w = _w;\n    // insert heading letter\n    res.push(<Heading key={l}>{letter}</Heading>);\n\n    const list = [];\n    let key = 1;\n    while (w < dict.length && dict[w].word[0].toUpperCase() == letter) {\n      list.push(\n        <li key={key}>\n          {unescape(dict[w].word)}\n          <div key={key++} style={{ marginLeft: '1rem', fontSize: '0.8rem' }}>\n            {dict[w++].definition.join(', ')}\n          </div>\n        </li>,\n      );\n    }\n    res.push(<ul>{list}</ul>);\n    _w = w;\n    l++;\n  }\n  _w = 0;\n  return res;\n};\n\nconst Heading: React.FC<Props> = props => (\n  <p>\n    {props.children}\n    <style jsx>{`\n      p {\n        font-size: 1.5rem;\n        font-weight: bold;\n        margin: 0;\n      }\n    `}</style>\n  </p>\n);\n\nclass Vocab extends React.PureComponent<{}, WordState> {\n  state: WordState = initWordState;\n\n  fetchWords() {\n    fetch('http://localhost:3001/vocab-temp?_sort=word&order=asc')\n      .then(res => res.json())\n      .then(json => {\n        this.setState({ words: json });\n      });\n  }\n\n  componentDidMount() {\n    this.fetchWords(); // update state\n  }\n\n  render() {\n    return (\n      <Layout>\n        <div className=\"container\">{createWordList(this.state.words)}</div>\n        {/* TODO move createWordList to componentdidmoutn */}\n        {/* <div>{createWordList(this.state.words.map(item => item.word))}</div> */}\n        {/* {[...Array(26)].map((_, i) => (\n          <Heading key={i}>{String.fromCharCode(65 + i)}</Heading>\n        ))} */}\n      </Layout>\n    );\n  }\n}\n\nexport default Vocab;\n"]},"metadata":{},"sourceType":"module"}