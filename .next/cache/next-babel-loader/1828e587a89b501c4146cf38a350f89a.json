{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/kashi-lab/github/tangochou/components/Texts.tsx\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Link from 'next/link';\nconst initTitleState = {\n  texts: [{\n    id: 1,\n    title: 'init 1',\n    desc: 'dummy',\n    text: 'dummy'\n  }, {\n    id: 2,\n    title: 'init2',\n    desc: 'dummy',\n    text: 'dummy'\n  }]\n};\n\nclass Texts extends React.PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", initTitleState);\n  }\n\n  async componentDidMount() {\n    const res = await fetch('http://localhost:3001/texts');\n    const data = await res.json();\n    this.setState({\n      texts: data\n    });\n  }\n\n  render() {\n    return __jsx(\"ul\", {\n      className: \"jsx-3170864205\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, this.state.texts.map((item, i) => __jsx(\"li\", {\n      key: i,\n      className: \"jsx-3170864205\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, __jsx(Link, {\n      key: i,\n      href: \"/text/[id]\",\n      as: `/text/${item.id}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      key: i,\n      className: \"jsx-3170864205\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, item.title)))), __jsx(_JSXStyle, {\n      id: \"3170864205\",\n      __self: this\n    }, \"a.jsx-3170864205,a.jsx-3170864205:visited{color:#230903;font-weight:bold;-webkit-text-decoration:none;text-decoration:none;}a.jsx-3170864205:hover{color:#656256;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9rYXNoaS1sYWIvZ2l0aHViL3RhbmdvY2hvdS9jb21wb25lbnRzL1RleHRzLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF5Q29CLEFBSTJCLEFBS0EsY0FKRyxBQUtuQixpQkFKdUIsa0RBQ3ZCIiwiZmlsZSI6Ii9Vc2Vycy9rYXNoaS1sYWIvZ2l0aHViL3RhbmdvY2hvdS9jb21wb25lbnRzL1RleHRzLnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgTGluayBmcm9tICduZXh0L2xpbmsnO1xuXG5pbnRlcmZhY2UgVGl0bGVTdGF0ZSB7XG4gIHRleHRzOiB7IGlkOiBudW1iZXI7IHRpdGxlOiBzdHJpbmc7IGRlc2M6IHN0cmluZzsgdGV4dDogc3RyaW5nIH1bXTtcbn1cblxuY29uc3QgaW5pdFRpdGxlU3RhdGUgPSB7XG4gIHRleHRzOiBbXG4gICAge1xuICAgICAgaWQ6IDEsXG4gICAgICB0aXRsZTogJ2luaXQgMScsXG4gICAgICBkZXNjOiAnZHVtbXknLFxuICAgICAgdGV4dDogJ2R1bW15JyxcbiAgICB9LFxuICAgIHtcbiAgICAgIGlkOiAyLFxuICAgICAgdGl0bGU6ICdpbml0MicsXG4gICAgICBkZXNjOiAnZHVtbXknLFxuICAgICAgdGV4dDogJ2R1bW15JyxcbiAgICB9LFxuICBdLFxufTtcbmNsYXNzIFRleHRzIGV4dGVuZHMgUmVhY3QuUHVyZUNvbXBvbmVudDx7fSwge30+IHtcbiAgc3RhdGU6IFRpdGxlU3RhdGUgPSBpbml0VGl0bGVTdGF0ZTtcblxuICBhc3luYyBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaCgnaHR0cDovL2xvY2FsaG9zdDozMDAxL3RleHRzJyk7XG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlcy5qc29uKCk7XG4gICAgdGhpcy5zZXRTdGF0ZSh7IHRleHRzOiBkYXRhIH0pO1xuICB9XG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPHVsPlxuICAgICAgICB7dGhpcy5zdGF0ZS50ZXh0cy5tYXAoKGl0ZW0sIGkpID0+IChcbiAgICAgICAgICA8bGkga2V5PXtpfT5cbiAgICAgICAgICAgIDxMaW5rIGtleT17aX0gaHJlZj1cIi90ZXh0L1tpZF1cIiBhcz17YC90ZXh0LyR7aXRlbS5pZH1gfT5cbiAgICAgICAgICAgICAgPGEga2V5PXtpfT57aXRlbS50aXRsZX08L2E+XG4gICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgPC9saT5cbiAgICAgICAgKSl9XG4gICAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgICBhLFxuICAgICAgICAgIGE6dmlzaXRlZCB7XG4gICAgICAgICAgICBjb2xvcjogIzIzMDkwMztcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgICAgIH1cbiAgICAgICAgICBhOmhvdmVyIHtcbiAgICAgICAgICAgIGNvbG9yOiAjNjU2MjU2O1xuICAgICAgICAgIH1cbiAgICAgICAgYH08L3N0eWxlPlxuICAgICAgPC91bD5cbiAgICApO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFRleHRzO1xuIl19 */\\n/*@ sourceURL=/Users/kashi-lab/github/tangochou/components/Texts.tsx */\"));\n  }\n\n}\n\nexport default Texts;","map":{"version":3,"sources":["/Users/kashi-lab/github/tangochou/components/Texts.tsx"],"names":["React","Link","initTitleState","texts","id","title","desc","text","Texts","PureComponent","componentDidMount","res","fetch","data","json","setState","render","state","map","item","i"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAMA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,KAAK,EAAE,CACL;AACEC,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,KAAK,EAAE,QAFT;AAGEC,IAAAA,IAAI,EAAE,OAHR;AAIEC,IAAAA,IAAI,EAAE;AAJR,GADK,EAOL;AACEH,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,KAAK,EAAE,OAFT;AAGEC,IAAAA,IAAI,EAAE,OAHR;AAIEC,IAAAA,IAAI,EAAE;AAJR,GAPK;AADc,CAAvB;;AAgBA,MAAMC,KAAN,SAAoBR,KAAK,CAACS,aAA1B,CAAgD;AAAA;AAAA;;AAAA,mCAC1BP,cAD0B;AAAA;;AAG9C,QAAMQ,iBAAN,GAA0B;AACxB,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,6BAAD,CAAvB;AACA,UAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACA,SAAKC,QAAL,CAAc;AAAEZ,MAAAA,KAAK,EAAEU;AAAT,KAAd;AACD;;AACDG,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKC,KAAL,CAAWd,KAAX,CAAiBe,GAAjB,CAAqB,CAACC,IAAD,EAAOC,CAAP,KACpB;AAAI,MAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,CAAX;AAAc,MAAA,IAAI,EAAC,YAAnB;AAAgC,MAAA,EAAE,EAAG,SAAQD,IAAI,CAACf,EAAG,EAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,GAAG,EAAEgB,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAYD,IAAI,CAACd,KAAjB,CADF,CADF,CADD,CADH;AAAA;AAAA;AAAA,mvEADF;AAsBD;;AA/B6C;;AAkChD,eAAeG,KAAf","sourcesContent":["import React from 'react';\nimport Link from 'next/link';\n\ninterface TitleState {\n  texts: { id: number; title: string; desc: string; text: string }[];\n}\n\nconst initTitleState = {\n  texts: [\n    {\n      id: 1,\n      title: 'init 1',\n      desc: 'dummy',\n      text: 'dummy',\n    },\n    {\n      id: 2,\n      title: 'init2',\n      desc: 'dummy',\n      text: 'dummy',\n    },\n  ],\n};\nclass Texts extends React.PureComponent<{}, {}> {\n  state: TitleState = initTitleState;\n\n  async componentDidMount() {\n    const res = await fetch('http://localhost:3001/texts');\n    const data = await res.json();\n    this.setState({ texts: data });\n  }\n  render() {\n    return (\n      <ul>\n        {this.state.texts.map((item, i) => (\n          <li key={i}>\n            <Link key={i} href=\"/text/[id]\" as={`/text/${item.id}`}>\n              <a key={i}>{item.title}</a>\n            </Link>\n          </li>\n        ))}\n        <style jsx>{`\n          a,\n          a:visited {\n            color: #230903;\n            font-weight: bold;\n            text-decoration: none;\n          }\n          a:hover {\n            color: #656256;\n          }\n        `}</style>\n      </ul>\n    );\n  }\n}\n\nexport default Texts;\n"]},"metadata":{},"sourceType":"module"}