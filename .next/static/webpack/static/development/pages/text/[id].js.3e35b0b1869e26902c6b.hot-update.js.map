{"version":3,"file":"static/webpack/static/development/pages/text/[id].js.3e35b0b1869e26902c6b.hot-update.js","sources":["webpack:///./utils/dbUtils.tsx"],"sourcesContent":["import * as React from 'react';\nimport { escape } from './strUtils';\n\nexport const getWords = () => {\n  fetch('http://localhost:3001/vocab')\n    .then(res => res.json())\n    .then(json => {\n      //console.log(json);\n      return <div>hello</div>;\n    });\n};\nexport async function addWord(\n  tWord: string,\n  vWord: string,\n  textId: number,\n  defs: string[],\n) {\n  tWord = escape(tWord);\n  const vRes = await fetch('http://localhost:3001/vocab');\n  const vData = await vRes.json();\n  const vocab = vData.map(item => item.word);\n  // add to vocab\n  if (!vocab.includes(vWord)) {\n    fetch('http://localhost:3001/vocab', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        word: vWord.toLowerCase(),\n        definition: defs,\n      }),\n    }).then(getWords);\n  }\n  // add to word list (for text)\n  let tRes = await fetch(`http://localhost:3001/texts/?id=${textId}`);\n  let tData = await tRes.json();\n  tData = tData[0];\n  const wordList = tData.wordlist;\n  wordList.push(tWord);\n  console.log(wordList);\n  tRes = await fetch(`http://localhost:3001/texts/${textId}`, {\n    method: 'PUT',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      text: tData.text,\n      desc: tData.desc,\n      title: tData.title,\n      wordlist: wordList,\n    }),\n  });\n}\n\nexport async function getTextTitles() {\n  const res = await fetch('http://localhost:3001/texts');\n  const data = await res.json();\n  const elements = [];\n  data.map(item => elements.push(<li>{item.title}</li>));\n  return <>{elements}</>;\n}\n\nexport async function deleteWord(word: string, textId: number) {\n  word = escape(word);\n  // remove from vocab\n  const vRes = await fetch(\n    `http://localhost:3001/vocab?word=${word.toLowerCase()}`,\n  );\n  const vData = await vRes.json();\n  if (vData.length) {\n    const vId = vData[0].id;\n    fetch(`http://localhost:3001/vocab/${vId}`, {\n      method: 'DELETE',\n    })\n      .then(getWords)\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  // delete from to word list (for text)\n  let tRes = await fetch(`http://localhost:3001/texts/?id=${textId}`);\n  let tData = await tRes.json();\n  tData = tData[0];\n  const wordList = tData.wordlist;\n  const i = wordList.indexOf(word);\n  console.log(wordList);\n  if (i > -1) wordList.splice(i, 1);\n  console.log(wordList);\n  tRes = await fetch(`http://localhost:3001/texts/${textId}`, {\n    method: 'PUT',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      text: tData.text,\n      desc: tData.desc,\n      title: tData.title,\n      wordlist: wordList,\n    }),\n  });\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;;;;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AANA;AAAA;AACA;AADA;AAOA;AAPA;AAAA;AACA;AADA;AAQA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AANA;AAWA;AACA;AACA;AAzBA;AAAA;AACA;AADA;AAyBA;AAzBA;AAAA;AACA;AADA;AA0BA;AACA;AACA;AACA;AACA;AA9BA;AAAA;AAgCA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAJA;AANA;AACA;AAhCA;AA+BA;AACA;AAhCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AA8CA;AAAA;AAAA;AACA;;;;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAQA;AAAA;AAAA;AACA;;;;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AADA;AAGA;AAHA;AAAA;AACA;AADA;AAMA;AACA;AAAA;AACA;AACA;AACA;AADA;AAKA;AACA;AACA;AACA;AACA;AAlBA;AAAA;AACA;AADA;AAmBA;AAnBA;AAAA;AACA;AADA;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AA1BA;AAAA;AA4BA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAJA;AANA;AACA;AA5BA;AA2BA;AACA;AA5BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;A","sourceRoot":""}